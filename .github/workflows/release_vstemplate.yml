name: Zip and Release Visual Studio template

on:
  push:
    branches:
      - 'main'

jobs:
  zip:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Git repository
      uses: actions/checkout@v4
      with:
        path: ./repository
    - name: Zip repository contents
      run: |
        mkdir -p ./zipped-vstemplate
        zip -r "./zipped-vstemplate/Haste Steam Workshop Mod.zip" ./repository
    - name: Archive zip artifact
      uses: actions/upload-artifact@v4
      with:
        name: zipped-vstemplate
        path: ./zipped-vstemplate
  release:
    runs-on: ubuntu-latest
    needs: [ zip ]
    permissions:
      contents: write
    steps:
      - name: Download zip artifact
        uses: actions/download-artifact@v4
        with:
          name: zipped-vstemplate
          path: vstemplate
      - name: Create draft release and upload template zip
        uses: actions/github-script@v7
        with:
          script: |
            const path = require('node:path');
            const fs = require('node:fs/promises');

            const release = await github.rest.repos.createRelease({
              ... context.repo,
              name: `Visual Studio Template (commit ${context.sha})`,
              draft: true,
              generate_release_notes: true
            });

            console.log('Draft release created:', release.data.html_url);

            for await (const filePath of (await glob.create('vstemplate/*')).globGenerator()) {
              const fileName = path.basename(filePath);

              console.log(`Uploading ${fileName} asset to draft release`);

              const data = await fs.readFile(filePath);
              await github.rest.repos.uploadReleaseAsset({
                ... context.repo,
                release_id: release.data.id,
                name: fileName,
                data
              });

              console.log(`${fileName} asset uploaded to draft release`);
            }
